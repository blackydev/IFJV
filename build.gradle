buildscript {
    repositories {
        mavenCentral()
    }
    ext {
        lombokVersion = '1.18.30'
        jacksonVersion = '2.13.0'
        // tests
        junitVersion = '5.10.2'
        mockitoVersion = '5.10.0'
        jmhVersion = '1.36'
        // deployment
        spotlessVersion = '6.25.0'
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
    }
}

plugins {
    id "com.diffplug.spotless" version "$spotlessVersion"
    id "se.ascp.gradle.gradle-versions-filter" version "0.1.16"
    id 'se.patrikerdes.use-latest-versions' version '0.2.18'
}

apply plugin: 'java-library'

repositories {
    mavenCentral()
}

group = 'com.patryklikus'
version = '0.0-ALPHA'

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation(
            "org.openjdk.jmh:jmh-core:$jmhVersion",
            "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion",
            "org.slf4j:slf4j-api:2.0.12"
    )

    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion",
            "org.mockito:mockito-core:$mockitoVersion",
            "org.mockito:mockito-junit-jupiter:$mockitoVersion",
    )

    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.junit.platform:junit-platform-launcher:1.10.2"
    )
}

test {
    useJUnitPlatform()
}

spotless {
    java {
        //noinspection GroovyAccessibility
        target project.fileTree(project.rootDir) {
            include '**/*.java'
        }
        indentWithSpaces()
        removeUnusedImports()
        trimTrailingWhitespace()
        importOrder 'static', ''
        licenseHeader('/* Copyright Patryk Likus All Rights Reserved. */')
    }
}